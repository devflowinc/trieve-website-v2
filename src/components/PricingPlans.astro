---
import LinkButton from "./shared/LinkButton.astro";

interface PricingPlan {
  name: string;
  description: string;
  price: string;
  features: ReadonlyArray<{ name: string; value: string }>;
  highlight: string;
  action: {
    label: string;
    href: string;
    newTab?: boolean;
    variant: "primary" | "secondary" | "tertiary";
  };
}

interface Props {
  plans: ReadonlyArray<PricingPlan>;
}

const { plans } = Astro.props;
---

<div class="grid grid-cols-1 md:grid-cols-3 gap-8 mb-8">
  {
    plans.map((plan) => (
      <div class="relative flex flex-col rounded-lg border border-gray-200 bg-white p-8 shadow-sm">
        {plan.highlight && (
          <div class="absolute -top-4 -right-4 rounded-full bg-green-600 px-4 py-1 text-sm font-medium text-white">
            Popular
          </div>
        )}

        <h3 class="text-xl font-bold text-gray-900">{plan.name}</h3>
        <div class="mt-4 flex items-baseline">
          {plan.price.includes("sales") ? (
            <span class="rounded-lg bg-purple-600 px-4 py-2 text-base font-semibold text-white">
              {plan.price}
            </span>
          ) : (
            <span class="text-6xl font-bold text-gray-900">
              {plan.price}
              <span class="text-sm font-light">per month</span>
            </span>
          )}
        </div>
        <p class="text-sm text-gray-600 mt-2">{plan.description}</p>

        <ul class="my-8 space-y-4 flex-1">
          {plan.features.map((feature) => (
            <li class="flex items-start" data-feature={feature.name}>
              <div class="flex-shrink-0">
                <svg
                  class="h-6 w-6 text-purple-500"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke-width="1.5"
                  stroke="currentColor"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                  />
                </svg>
              </div>
              <span class="ml-3 text-base text-gray-700">{feature.value}</span>
            </li>
          ))}
        </ul>

        <div class="my-4 mb-2 flex items-center justify-center">
          <LinkButton
            variant={plan.action.variant}
            href={plan.action.href}
            newTab={plan.action.newTab}
          >
            {plan.action.label}
          </LinkButton>
        </div>
      </div>
    ))
  }
</div>
