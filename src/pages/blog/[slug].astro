---
import { Image } from "astro:assets";
import { getCollection, render, type CollectionEntry } from "astro:content";

import Layout from "@layouts/Layout.astro";

interface Props {
  post: CollectionEntry<"articles">;
}

// Generate paths for all blog posts
export async function getStaticPaths() {
  const posts = await getCollection("articles");

  return posts.map((post) => ({
    params: { slug: post.id },
    props: { post },
  }));
}

// Get post data for current page
const { post } = Astro.props;
const postData = post.data;
const { Content } = await render(post);

// Workaround for TS issue
const coverImage = postData.coverImage as ImageMetadata;
---

<Layout pageTitle={postData.title} pageDescription={postData.summary}>
  <div class="container mx-auto max-w-5xl px-4">
    <div class="block py-16 mx-auto">
      <div class="text-sm text-gray-500 mb-4">
        <time datetime={postData.date.toDateString()}>
          {
            postData.date.toLocaleDateString("en-US", {
              year: "numeric",
              month: "long",
              day: "numeric",
            })
          }
        </time>
        {postData.category && <span>in {postData.category}</span>}
      </div>

      <div
        class="max-w-5xl prose prose-lg prose-stone prose-headings:font-serif prose-img:rounded-md prose-img:shadow-md prose-img:p-2 prose-img:bg-white"
      >
        <h1 class="mb-4 mt-8 font-semibold">{postData.title}</h1>
        <p class="mt-0 max-w-prose italic text-xl">{postData.summary}</p>

        {
          coverImage ? (
            <div class="my-8 -mx-3 md:-mx-16 not-prose">
              <Image
                src={coverImage}
                alt={postData.title}
                class="rounded-xl shadow-lg"
              />
            </div>
          ) : null
        }

        <div class="mb-4">
          <Content />
        </div>
      </div>
    </div>
  </div>
</Layout>
