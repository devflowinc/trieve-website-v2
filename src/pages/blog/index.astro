---
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";

import Layout from "@layouts/Layout.astro";
import SectionHeader from "@components/shared/SectionHeader.astro";
import { getCollection } from "astro:content";

const articles = await getCollection("articles");
const authors = await getCollection("authors");

const blogEntries = articles.sort((a, b) => {
  return new Date(b.data.date).getTime() - new Date(a.data.date).getTime();
});

const authorsById = authors.reduce((acc, author) => {
  acc[author.id] = author;
  return acc;
}, {});

const pageTitle = "Trieve blog";
const pageDescription =
  "Detailed articles about search, discovery, relevance, RAG, and more from the Trieve team.";
---

<Layout
  contentClass="py-8"
  pageTitle={pageTitle}
  pageDescription={pageDescription}
>
  <SectionHeader role="primary" title={pageTitle} leadText={pageDescription} />
  <div class="container max-w-5xl mx-auto my-16 px-4">
    {
      blogEntries.map((item) => (
        <div class="my-16 grid grid-cols-1 md:grid-cols-2 md:gap-8 items-center">
          <div>
            {item.data.coverImage ? (
              <a
                href={`/blog/${item.id}`}
                class="block hover:opacity-80 hover:scale-105 transition-transform"
              >
                <Image
                  src={item.data.coverImage as ImageMetadata}
                  alt={item.data.title}
                  class="rounded-xl shadow-lg"
                />
              </a>
            ) : null}
          </div>
          <div class="flex flex-col gap-4 py-4 px-4 md:px-0">
            <div class="text-sm text-neutral-500">
              {item.data.date ? (
                <time>
                  {new Date(item.data.date).toLocaleDateString("en-US", {
                    year: "numeric",
                    month: "long",
                    day: "numeric",
                  })}
                </time>
              ) : null}
              {item.data.category ? <span>in {item.data.category}</span> : null}
              <span>by {authorsById[item.data.author.id].data.name} </span>
            </div>
            <h2 class="text-2xl font-bold">
              <a href={`/blog/${item.id}`}>{item.data.title}</a>
            </h2>
            <p class="text-gray-500">{item.data.summary}</p>
          </div>
        </div>
      ))
    }
  </div>
</Layout>
